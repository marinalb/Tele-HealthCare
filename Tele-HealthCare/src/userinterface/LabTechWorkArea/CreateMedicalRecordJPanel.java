/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.LabTechWorkArea;

import Business.AllergyList.Controller.Allergy;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.LabTechnicianOrganization;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.UserAccount.UserAccount;
import Business.VitalSign.VitalSign;
import Business.WorkQueue.LabTechnicianWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Neelu
 */
public class CreateMedicalRecordJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private LabTechnicianOrganization labTechnicianOrganization;
    private Enterprise enterprise;
    
    /**
     * Creates new form CreateMedicalRecordJPanel
     */
    public CreateMedicalRecordJPanel(JPanel upc, LabTechnicianOrganization lo, UserAccount ua, Enterprise e) {
        initComponents();
        userAccount = ua;
        userProcessContainer = upc;
        labTechnicianOrganization = lo;
        enterprise = e;
        
        populatePatientCombo();
        populateRequestTable();
        
    }

    public void populateRequestTable(){
       DefaultTableModel model = (DefaultTableModel)requestTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : labTechnicianOrganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[3];
            row[0] = request;
            row[1] = request.getMessage();
            row[2] = request.getStatus();
            
            model.addRow(row);
        }
    }
    
    public void populatePatientCombo(){
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof PatientOrganization){
                org = organization;
                break;
            }
    }
       if (org!=null){
            for(Employee emp: org.getEmployeeDirectory().getEmployeeList()){
                patientDropBox.addItem(emp);
                
            }
        }
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        heartTextField = new javax.swing.JTextField();
        bloodPressureTextField = new javax.swing.JTextField();
        weightTextField = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();
        btnCreateVitalSigns = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        patientDropBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        respiratoryTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        radioAlcohol = new javax.swing.JRadioButton();
        radioDrug = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        allergyTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Create Medical Records");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(354, 16, -1, -1));

        heartTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(heartTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 200, -1));

        bloodPressureTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(bloodPressureTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, 200, -1));

        weightTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(weightTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 390, 200, -1));

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 620, -1, -1));

        btnCreateVitalSigns.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCreateVitalSigns.setText("Create Medical Record");
        btnCreateVitalSigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateVitalSignsActionPerformed(evt);
            }
        });
        add(btnCreateVitalSigns, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 460, 270, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Select Patient's Name");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));

        patientDropBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        patientDropBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientDropBoxActionPerformed(evt);
            }
        });
        add(patientDropBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 200, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Respiratory Rate");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Heart Rate");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Blood Pressure");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 340, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Weight");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, -1, -1));

        respiratoryTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(respiratoryTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, 200, -1));

        requestTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "From", "Test Request For", "Status"
            }
        ));
        jScrollPane1.setViewportView(requestTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 240, 650, 150));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Abuse Factor");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 440, -1, -1));

        buttonGroup1.add(radioAlcohol);
        radioAlcohol.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        radioAlcohol.setText("Alcohol");
        add(radioAlcohol, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 440, -1, -1));

        buttonGroup1.add(radioDrug);
        radioDrug.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        radioDrug.setText("Drug");
        add(radioDrug, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 440, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Allergies");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 510, -1, -1));

        allergyTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        allergyTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allergyTxtActionPerformed(evt);
            }
        });
        add(allergyTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 510, 200, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Check Request Status");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 190, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Update Medical Record");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout)userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);

    }//GEN-LAST:event_backBtnActionPerformed

    private void btnCreateVitalSignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateVitalSignsActionPerformed
        // TODO add your handling code here:
        int resp;
        int heart;
        int bp;
        int w;
        

        try{
            resp = Integer.parseInt(respiratoryTextField.getText());
            heart = Integer.parseInt(heartTextField.getText());
            bp = Integer.parseInt(bloodPressureTextField.getText());
            w = Integer.parseInt(weightTextField.getText());
        }
        catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Number Format Exception. Please Enter a Valid Number!", "Warning!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String abuse = null;
        if(radioAlcohol.isSelected()){
            abuse = "Alcohol";
        }else if(radioDrug.isSelected()){
            abuse = "Drug";
        }
        String aller = allergyTxt.getText();
        if(aller.trim().isEmpty()){
            JOptionPane.showMessageDialog(null,"Please enter a Allergy!");
            return;
        }
        
        int selectedRow = requestTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a Patient request to attach!");
            return;
        }
        else{
            
            Employee patient = (Employee)patientDropBox.getSelectedItem();
        
        VitalSign vs = patient.getMedicalRecord().getVitalSignHistory().addVitalSign();
        
        
        patient.getMedicalRecord().setAbuseFactor(abuse);
        patient.getMedicalRecord().setAllergies(allergyTxt.getText());
        
        
        
        Allergy all = enterprise.getAllergyList().searchAllergy(aller);
            if(all!=null){
                all.setCount(all.getCount()+1);
                }
            else{
                Allergy a = enterprise.getAllergyList().addAllergy();
                a.setAllergyName(allergyTxt.getText());
                a.setCount(a.getCount()+1);
                }
            
            
        String timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
        
        vs.setRespiratoryRate(resp);
        vs.setHeartRate(heart);
        vs.setBloodPressure(bp);
        vs.setWeight(w);
        vs.setTimestamp(timeStamp);
        if((patient.getAge()>=1 && patient.getAge()<=3)&&(resp>=20 && resp<=30) && (heart>=80 && heart<=130) && (bp>=80 && bp<=110) && (w>=22 && w<=31)){
            vs.setStatusReport("Normal");
        }
        else if((patient.getAge()>=4 && patient.getAge()<=5)&&(resp>=20 && resp<=30) && (heart>=80 && heart<=120) && (bp>=80 && bp<=110) && (w>=31 && w<=40)){
            vs.setStatusReport("Normal");
        } 
        else if((patient.getAge()>=6 && patient.getAge()<=12)&&(resp>=20 && resp<=30) && (heart>=70 && heart<=110) && (bp>=80 && bp<=120) && (w>=41 && w<=92)){
            vs.setStatusReport("Normal");
        } 
           else if((patient.getAge()>13)&&(resp>=12 && resp<=20) && (heart>=55 && heart<=105) && (bp>=110 && bp<=120) && (w>110)){
            vs.setStatusReport("Normal");
        } 
           else{
               vs.setStatusReport("Abnormal");
           }
        Date date = new Date();
        LabTechnicianWorkRequest request = (LabTechnicianWorkRequest)requestTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setResolveDate(date);
        request.setStatus("Tests Completed");
       request.setTestResult("Report Generated");
       
        populateRequestTable();
        
        

        JOptionPane.showMessageDialog(null, "Medical Records have been updated with Vital Signs for the Patient: "+request.getMessage(), "information", JOptionPane.INFORMATION_MESSAGE);

        resetFields();
        }
        
        
        
    }//GEN-LAST:event_btnCreateVitalSignsActionPerformed

//     public void calculateStatus(){
//        Employee patient = (Employee)patientDropBox.getSelectedItem();
//        
//        for(VitalSign vs: patient.getMedicalRecord().getVitalSignHistory().getVitalSignList() ){
//            
//            int resp = vs.getRespiratoryRate();
//            int heart =vs.getHeartRate();
//            int bp =vs.getBloodPressure();
//            int w =vs.getWeight();
//            
//            if((patient.getAge()>=1 && patient.getAge()<=3)&&(resp>=20 && resp<=30) && (heart>=80 && heart<=130) && (bp>=80 && bp<=110) && (w>=22 && w<=31)){
//            vs.setStatusReport("Normal");
//        }
//        else if((patient.getAge()>=4 && patient.getAge()<=5)&&(resp>=20 && resp<=30) && (heart>=80 && heart<=120) && (bp>=80 && bp<=110) && (w>=31 && w<=40)){
//            vs.setStatusReport("Normal");
//        } 
//        else if((patient.getAge()>=6 && patient.getAge()<=12)&&(resp>=20 && resp<=30) && (heart>=70 && heart<=110) && (bp>=80 && bp<=120) && (w>=41 && w<=92)){
//            vs.setStatusReport("Normal");
//        } 
//           else if((patient.getAge()>13)&&(resp>=12 && resp<=20) && (heart>=55 && heart<=105) && (bp>=110 && bp<=120) && (w>110)){
//            vs.setStatusReport("Normal");
//        } 
//           else{
//               vs.setStatusReport("Abnormal");
//           }
//            
//        }
//     }
     
     
    private void allergyTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allergyTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allergyTxtActionPerformed

    private void patientDropBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientDropBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientDropBoxActionPerformed

    
    public void resetFields(){
        respiratoryTextField.setText("");
        heartTextField.setText("");
        bloodPressureTextField.setText("");
        weightTextField.setText("");
        
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField allergyTxt;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField bloodPressureTextField;
    private javax.swing.JButton btnCreateVitalSigns;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField heartTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox patientDropBox;
    private javax.swing.JRadioButton radioAlcohol;
    private javax.swing.JRadioButton radioDrug;
    private javax.swing.JTable requestTable;
    private javax.swing.JTextField respiratoryTextField;
    private javax.swing.JTextField weightTextField;
    // End of variables declaration//GEN-END:variables
}
